---
bibliography: references.bib
---

# Project Plan

This document outlines the project plan for `ChemistryShinyTools`, an open-source R package to streamline the development of R Shiny applications for cheminformatics research. The plan covers the start-up phase, technical delivery, dissemination strategies, and budget allocation, ensuring alignment with the R Consortium’s goals of promoting R, supporting infrastructure, and fostering collaboration. The timeline spans 6 months, with clear milestones and deliverables to ensure timely completion.

## Start-up Phase

The start-up phase focuses on establishing the foundation for `ChemistryShinyTools` to ensure smooth development and community engagement.

- **Setting Up Collaboration Platform**:
  - Create a GitHub repository (`github.com/sawsimeon/ChemistryShinyTools`) for version control and community contributions.
  - Develop a `CONTRIBUTING.md` file outlining guidelines for contributors, including coding standards and pull request processes.
  - Set up GitHub Issues for feature requests and bug tracking, and a discussion board for community feedback.
  - **Timeline**: Month 1 (Weeks 1–2).
- **License Decisions**:
  - Adopt the MIT License to ensure the package is open-source, accessible, and compatible with CRAN submission requirements.
  - Document the license in the repository’s `LICENSE` file and package `DESCRIPTION`.
  - **Timeline**: Month 1 (Week 1).
- **Reporting Framework**:
  - Establish a quarterly reporting schedule to update the R Consortium on progress via email and blog posts.
  - Create a project wiki on GitHub to document milestones, progress, and community engagement efforts.
  - Schedule presentations at R Consortium ISC meetings and the Uppsala Open Science group to share updates.
  - **Timeline**: Month 1 (Weeks 1–4).

## Technical Delivery

The technical delivery phase involves developing, testing, and deploying `ChemistryShinyTools` with clear milestones and target dates to ensure accountability.

- **Month 1–2: Core Development (Target: December 18, 2025)**  
  - Develop core Shiny modules for molecular visualization (e.g., SMILES string rendering, PCA plots) using `shiny` and `ggplot2`.
  - Create machine learning wrappers for QSAR modeling using `caret`, integrated with `rcdk` for molecular descriptors.
  - Implement data processing utilities for SMILES parsing and molecular property calculations using `rcdk` and `fingerprint`.
  - Set up package structure with `devtools` for CRAN compliance.
  - **Deliverable**: Initial codebase with functional Shiny modules and QSAR wrappers in the GitHub repository.

- **Month 3–4: Documentation and Example App (Target: February 18, 2026)**  
  - Write comprehensive documentation using Quarto, including a vignette and tutorials for molecular visualization and QSAR modeling.
  - Develop a sample Shiny app demonstrating molecular data visualization and basic QSAR functionality.
  - Begin unit testing with `testthat` to ensure module reliability.
  - **Deliverable**: Vignette, tutorials, and sample app hosted on GitHub Pages; initial test suite completed.

- **Month 5: Testing and Community Feedback (Target: March 18, 2026)**  
  - Finalize unit tests and ensure CRAN compliance using `devtools` and `R CMD check`.
  - Solicit community feedback via GitHub Issues and X posts, incorporating suggestions into the package.
  - Refine documentation based on user feedback.
  - **Deliverable**: CRAN-ready package with tested modules and updated documentation.

- **Month 6: Deployment and Outreach (Target: April 18, 2026)**  
  - Submit `ChemistryShinyTools` to CRAN and the R Consortium ISC for review.
  - Publish a final vignette and tutorials on GitHub Pages.
  - Present the project at the Uppsala Open Science group and share a completion blog post on the R Consortium blog.
  - **Deliverable**: Published package on CRAN, final documentation, and presentation slides.

## Other Aspects

To maximize accessibility and impact, `ChemistryShinyTools` will be developed and shared with the following strategies:

- **Open-Source License**: The package will use the MIT License, ensuring broad accessibility and compatibility with CRAN and community contributions.
- **Code Hosting**: The GitHub repository (`github.com/sawsimeon/ChemistryShinyTools`) will serve as the central hub for code, documentation, and collaboration, with Git for version control and Issues for feedback.
- **Publicity**:
  - **Announcement Post**: Publish an announcement on the R Consortium blog and X in Month 2 to introduce the project and invite contributors.
  - **Delivery Blog Post**: Share a completion post on the R Consortium blog in Month 6, detailing outcomes and usage instructions.
  - **Social Media**: Regular updates on X (@ChemistryShinyTools) and RStudio Community forums to engage chemists and R users (Months 2–6).
  - **UseR!**: Submit an abstract to UseR! 2026 to present `ChemistryShinyTools` and demonstrate its applications (Month 5).
  - **ISC Meetings**: Provide quarterly updates at R Consortium ISC meetings to ensure alignment with community goals (Months 3 and 6).
- **Quarterly Content**: Share progress updates on the R Consortium blog every 3 months, covering development milestones, community feedback, and use cases.

## Budget & Funding Plan

The estimated budget for `ChemistryShinyTools` is $1,000–$2,000, primarily allocated to labor costs for development, testing, and documentation. The budget is tied to the following milestones:

- **Milestone 1: Core Development (Months 1–2, $800)**  
  - **Work**: Develop Shiny modules, QSAR wrappers, and data processing utilities; set up GitHub repository and license.
  - **Outcome**: Functional codebase with initial modules and repository infrastructure.
  - **Funding**: Covers 160 hours of part-time development (20 hours/week).

- **Milestone 2: Documentation and Example App (Months 3–4, $800)**  
  - **Work**: Create Quarto-based documentation, tutorials, and a sample Shiny app; begin testing and outreach.
  - **Outcome**: Vignette, tutorials, and app hosted on GitHub Pages; initial test suite.
  - **Funding**: Covers 160 hours of part-time work for documentation and app development.

- **Milestone 3: Testing, Deployment, and Outreach (Months 5–6, $400)**  
  - **Work**: Finalize testing, ensure CRAN compliance, incorporate community feedback, submit to CRAN, and present at Uppsala Open Science group.
  - **Outcome**: CRAN-published package, finalized documentation, and community engagement.
  - **Funding**: Covers 160 hours of part-time work for testing, refinement, and outreach.

- **Additional Costs**:
  - **Software/Tools**: Free/open-source tools (R, Quarto, GitHub, `rcdk`, `fingerprint`) will be used, minimizing costs.
  - **Cloud Hosting**: Optional cloud hosting for the sample app (e.g., ShinyApps.io, ~$100–$200, if needed).
  - **Total Estimate**: $1,000–$2,000, excluding indirect costs (e.g., travel, hardware), which are not covered per ISC guidelines.

The budget ensures efficient use of funds, focusing on labor to deliver a high-quality, community-driven package. The ISC may vet fund usage, and any questions will be addressed promptly.

[@simeon2023; @wickham2016; @rcdk2020; @fingerprint2018; @chemmineR2021]